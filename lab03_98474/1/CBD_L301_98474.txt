cqlsh> help

Documented shell commands:
===========================
CAPTURE  CLS          COPY  DESCRIBE  EXPAND  LOGIN   SERIAL  SOURCE   UNICODE
CLEAR    CONSISTENCY  DESC  EXIT      HELP    PAGING  SHOW    TRACING

CQL help topics:
================
AGGREGATES               CREATE_KEYSPACE           DROP_TRIGGER      TEXT     
ALTER_KEYSPACE           CREATE_MATERIALIZED_VIEW  DROP_TYPE         TIME     
ALTER_MATERIALIZED_VIEW  CREATE_ROLE               DROP_USER         TIMESTAMP
ALTER_TABLE              CREATE_TABLE              FUNCTIONS         TRUNCATE 
ALTER_TYPE               CREATE_TRIGGER            GRANT             TYPES    
ALTER_USER               CREATE_TYPE               INSERT            UPDATE   
APPLY                    CREATE_USER               INSERT_JSON       USE      
ASCII                    DATE                      INT               UUID     
BATCH                    DELETE                    JSON            
BEGIN                    DROP_AGGREGATE            KEYWORDS        
BLOB                     DROP_COLUMNFAMILY         LIST_PERMISSIONS
BOOLEAN                  DROP_FUNCTION             LIST_ROLES      
COUNTER                  DROP_INDEX                LIST_USERS      
CREATE_AGGREGATE         DROP_KEYSPACE             PERMISSIONS     
CREATE_COLUMNFAMILY      DROP_MATERIALIZED_VIEW    REVOKE          
CREATE_FUNCTION          DROP_ROLE                 SELECT          
CREATE_INDEX             DROP_TABLE                SELECT_JSON     

cqlsh> CREATE KEYSPACE tutorialspoint
   ... WITH replication = {'class':'SimpleStrategy', 'replication_factor' : 3};

Warnings :
Your replication factor 3 for keyspace tutorialspoint is higher than the number of nodes 1

cqlsh> CREATE KEYSPACE tutorialspoint
   ... 
   ... 
   ... 
   ... 
cqlsh> DESCRIBE keyspaces;

system       system_distributed  system_traces  system_virtual_schema
system_auth  system_schema       system_views   tutorialspoint       

cqlsh> SELECT * FROM system_schema.keyspaces;

 keyspace_name      | durable_writes | replication
--------------------+----------------+-------------------------------------------------------------------------------------
        system_auth |           True | {'class': 'org.apache.cassandra.locator.SimpleStrategy', 'replication_factor': '1'}
      system_schema |           True |                             {'class': 'org.apache.cassandra.locator.LocalStrategy'}
     tutorialspoint |           True | {'class': 'org.apache.cassandra.locator.SimpleStrategy', 'replication_factor': '3'}
 system_distributed |           True | {'class': 'org.apache.cassandra.locator.SimpleStrategy', 'replication_factor': '3'}
             system |           True |                             {'class': 'org.apache.cassandra.locator.LocalStrategy'}
      system_traces |           True | {'class': 'org.apache.cassandra.locator.SimpleStrategy', 'replication_factor': '2'}

(6 rows)

cqlsh:tutorialspoint> ALTER KEYSPACE tutorialspoint
                  ... WITH replication = {'class':'NetworkTopologyStrategy', 'replication_factor' : 3};

Warnings :
Your replication factor 3 for keyspace tutorialspoint is higher than the number of nodes 1 for datacenter datacenter1

cqlsh:tutorialspoint>  CREATE TABLE emp(
                  ...    emp_id int PRIMARY KEY,
                  ...    emp_name text,
                  ...    emp_city text,
                  ...    emp_sal varint,
                  ...    emp_phone varint
                  ...    );
cqlsh:tutorialspoint> select * from emp;

 emp_id | emp_city | emp_name | emp_phone | emp_sal
--------+----------+----------+-----------+---------

(0 rows)

cqlsh:tutorialspoint> alter table emp
                  ... add emp_email text;
cqlsh:tutorialspoint> select * from emp;

 emp_id | emp_city | emp_email | emp_name | emp_phone | emp_sal
--------+----------+-----------+----------+-----------+---------

(0 rows)
cqlsh:tutorialspoint> alter table emp drop emp_email;
cqlsh:tutorialspoint> select * from emp;

 emp_id | emp_city | emp_name | emp_phone | emp_sal
--------+----------+----------+-----------+---------

(0 rows)

cqlsh:tutorialspoint>  INSERT INTO emp (emp_id, emp_name, emp_city,
                  ...    emp_phone, emp_sal) VALUES(1,'ram', 'Hyderabad', 9848022338, 50000);
cqlsh:tutorialspoint> INSERT INTO emp (emp_id, emp_name, emp_city,
                  ...    emp_phone, emp_sal) VALUES(2,'robin', 'Hyderabad', 9848022339, 40000);
cqlsh:tutorialspoint> INSERT INTO emp (emp_id, emp_name, emp_city,
                  ...    emp_phone, emp_sal) VALUES(3,'rahman', 'Chennai', 9848022330, 45000);
cqlsh:tutorialspoint> select * from emp;

 emp_id | emp_city  | emp_name | emp_phone  | emp_sal
--------+-----------+----------+------------+---------
      1 | Hyderabad |      ram | 9848022338 |   50000
      2 | Hyderabad |    robin | 9848022339 |   40000
      3 |   Chennai |   rahman | 9848022330 |   45000

(3 rows)

cqlsh:tutorialspoint> UPDATE emp SET emp_city='Delhi',emp_sal=50000
                  ... WHERE emp_id=2;
cqlsh:tutorialspoint> SELECT emp_name, emp_sal from emp;

 emp_name | emp_sal
----------+---------
      ram |   50000
    robin |   50000
   rahman |   45000

(3 rows)

cqlsh:tutorialspoint> DELETE emp_sal FROM emp WHERE emp_id=3;
cqlsh:tutorialspoint> SELECT emp_name, emp_sal from emp;

 emp_name | emp_sal
----------+---------
      ram |   50000
    robin |   50000
   rahman |    null

(3 rows)

cqlsh:tutorialspoint> create table data(name text primary key, email list<text>);
cqlsh:tutorialspoint> insert into data(name, email) values('joao reis', ['joao@ua.pt', 'reis@ua.pt']);
cqlsh:tutorialspoint> update data
                  ... set email = email +['joaoreis16@ua.pt']
                  ... where name = 'joao reis';
cqlsh:tutorialspoint> SELECT * FROM data;

 name      | email
-----------+--------------------------------------------------
 joao reis | ['joao@ua.pt', 'reis@ua.pt', 'joaoreis16@ua.pt']

(1 rows)

cqlsh:tutorialspoint> create table data2(name text primary key, phone set<variant>)
                  ... ;
InvalidRequest: Error from server: code=2200 [Invalid query] message="Non-frozen UDTs are not allowed inside collections: set<variant>"
cqlsh:tutorialspoint> create table data2(name text primary key, phone set<varint>) ;
cqlsh:tutorialspoint> INSERT INTO data2(name, phone)VALUES ('rahman',    {9848022338,9848022339});
cqlsh:tutorialspoint> update data2                  ... set phone = phone +{984123523}
                  ... where name = 'rahman';
cqlsh:tutorialspoint> SELECT * FROM data2;

 name   | phone
--------+-------------------------------------
 rahman | {984123523, 9848022338, 9848022339}

(1 rows)

cqlsh:tutorialspoint> CREATE TABLE data3 (name text PRIMARY KEY, address
                  ... map<timestamp, text>);
cqlsh:tutorialspoint> INSERT INTO data3 (name, address)
                  ...    VALUES ('robin', {'home' : 'hyderabad' , 'office' : 'Delhi' } );
InvalidRequest: Error from server: code=2200 [Invalid query] message="Unable to parse a date/time from 'home'"
cqlsh:tutorialspoint> drop table data3
                  ... ;
cqlsh:tutorialspoint> CREATE TABLE data3 (name text PRIMARY KEY, address map<text, text>);cqlsh:tutorialspoint> INSERT INTO data3 (name, address)    VALUES ('robin', {'home' : 'hyderabad' , 'office' : 'Delhi' } );
cqlsh:tutorialspoint> update data3
                  ... set address = address+{'office':'mumbai'}
                  ... where name = 'robin'
                  ... ;
cqlsh:tutorialspoint> select * from data3;

 name  | address
-------+-------------------------------------------
 robin | {'home': 'hyderabad', 'office': 'mumbai'}

(1 rows)
cqlsh:tutorialspoint> describe tables;

data  data2  data3  emp

cqlsh:tutorialspoint> create index name on emp(emp_name);
cqlsh:tutorialspoint> select * from emp where emp_name='ram';

 emp_id | emp_city  | emp_name | emp_phone  | emp_sal
--------+-----------+----------+------------+---------
      1 | Hyderabad |      ram | 9848022338 |   50000
