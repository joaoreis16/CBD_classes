# MongoDB

* é uma base de dados orientada a ***documentos*** representados numa estrutura JSON.
* é um projeto de código-aberto

## Ligar o servidor MongoDB

```
mongod --dbpath 3ano/CBD/lab02
```

ou, apenas, 

```
mongod
```

## correr MongoDB 

```
mongo
```


## comandos mais utilizados

* ```use [database name]``` --> criar uma base de dados
* ```db``` --> indica a base de dados selecionada
* ```db.movie.insert({"name": "tutorials point"})```
* ```db.dropDatabase()``` --> eliminar uma base de dados
* ```show dbs``` --> lista das base de dados ativas
* ```db.createCollection([name], [options])``` -->
    ```
        db.createCollection("mycollection")
    ```

    ```
        db.createCollection("mycol", { capped : true, autoIndexID : true, size : 6142800, max : 10000 } ){
            "ok" : 0,
            "errmsg" : "BSON field 'create.autoIndexID' is an unknown field.",
            "code" : 40415,
            "codeName" : "Location40415"
        }
    ```
* ```db.mycollection.drop()``` --> eliminar coleção
* ```db.users.insert([document])``` --> inserir documentos
* ```db.users.insertMany([documentos])``` --> insere vários documentos
* ```db.mycol.find()``` --> irá apresentar todos os documentos de forma não-estruturada
* ```db.COLLECTION_NAME.update(SELECTION_CRITERIA, UPDATED_DATA)``` --> irá dar update nos dados selecionados

# Iterações com o MongoDB

> use mydb
switched to db mydb
> db
mydb
> db.movie.insert({"name": "tutorials point"})
WriteResult({ "nInserted" : 1 })
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
mydb    0.000GB
> db.createCollection("mycollection")
{ "ok" : 1 }
> show collections
movie
mycollection
> > db.createCollection("mycol", { capped : true, autoIndexID : true, size : 6142800, max : 10000 } ){
... "ok" : 0,
... "errmsg" : "BSON field 'create.autoIndexID' is an unknown field.",
... "code" : 40415,
... "codeName" : "Location40415"
... }
2021-10-28T09:49:51.470+0100 E QUERY    [thread1] SyntaxError: expected expression, got '>' @(shell):1:0
> db.mycollection.drop()
false
> show collections
> db.createCollection("users")
{ "ok" : 1 }
> show collections
users
> db.users.insert({
... ... _id : ObjectId("507f191e810c19729de860ea"),
... ... title: "MongoDB Overview",
... ... description: "MongoDB is no sql database",
... ... by: "tutorials point",
... ... url: "http://www.tutorialspoint.com",
... ... tags: ['mongodb', 'database', 'NoSQL'],
... ... likes: 100
... ... })
WriteResult({ "nInserted" : 1 })
> db.createCollection("mycol")
{ "ok" : 1 }
> db.mycol.insert([
... {
... title: "MongoDB Overview",
... description: "MongoDB is no SQL database",
... by: "tutorials point",
... url: "http://www.tutorialspoint.com",
... tags: ["mongodb", "database", "NoSQL"],
... likes: 100
... },
... {
... title: "NoSQL Database",
... description: "NoSQL database doesn't have tables",
... by: "tutorials point",
... url: "http://www.tutorialspoint.com",
... tags: ["mongodb", "database", "NoSQL"],
... likes: 20,
... comments: [
... {
... user:"user1",
... message: "My first comment",
... dateCreated: new Date(2013,11,10,2,35),
... like: 0
... }
... ]
... }
... ])
BulkWriteResult({
        "writeErrors" : [ ],
        "writeConcernErrors" : [ ],
        "nInserted" : 2,
        "nUpserted" : 0,
        "nMatched" : 0,
        "nModified" : 0,
        "nRemoved" : 0,
        "upserted" : [ ]
})
> db.createCollection("mycol")
{
        "ok" : 0,
        "errmsg" : "a collection 'test.mycol' already exists",
        "code" : 48,
        "codeName" : "NamespaceExists"
}
> show collections
mycol
users
> db.mycol.find()
{ "_id" : ObjectId("617a68123869081f29874539"), "title" : "MongoDB Overview", "description" : "MongoDB is no SQL database", "by" : "tutorials point", "url" : "http://www.tutorialspoint.com", "tags" : [ "mongodb", "database", "NoSQL" ], "likes" : 100 }
{ "_id" : ObjectId("617a68123869081f2987453a"), "title" : "NoSQL Database", "description" : "NoSQL database doesn't have tables", "by" : "tutorials point", "url" : "http://www.tutorialspoint.com", "tags" : [ "mongodb", "database", "NoSQL" ], "likes" : 20, "comments" : [ { "user" : "user1", "message" : "My first comment", "dateCreated" : ISODate("2013-12-10T02:35:00Z"), "like" : 0 } ] }
> db.mycol.update({'title':'MongoDB Overview'},{$set:{'title':'New MongoDB Tutorial'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })